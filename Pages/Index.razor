@page "/"
@using BlazorStyled
@using DataJuggler.UltimateHelper 
@using DataJuggler.Blazor.Components
@using DataJuggler.Blazor.FileUpload
@using DataJuggler.Blazor.Components.Enumerations

<Styled @bind-Classname="Slogan">
    font-family: Verdana;
    font-size: @LargeTextSizeStyle;
    position: absolute;
    top: 8.4vh;
    left: .4%;
    white-space: nowrap;    
</Styled>
<Styled @bind-Classname="SideBarElementText">
    text-align: center;
    font-family: Verdana;
    font-size: @TextSizeStyle;
    font-weight: bold;
</Styled>
<Styled @bind-Classname="SideBarSmallText">
    text-align: left;
    font-family: Verdana;
    font-size: @TextSizeStyle;
    font-weight: normal;
</Styled>
<Styled @bind-Classname="DownloadLink">    
    color: rgb(48, 88, 184);  
    background: none!important;
    border: none;
    padding: 0!important;
    font-family: Verdana;
    text-decoration: none;
    cursor: pointer;    
    height: 2.04vh;
    line-height: 2.04vh;
    font-size: @TextSizeStyle;
    font-weight: normal;
    position: fixed;    
    display: inline;
    left: 2.8%;
    margin-top: .4vh;
</Styled>
<Styled @bind-Classname="DownloadLink2">    
    color: white;  
    background: none!important;
    border: none;
    padding: 0!important;
    font-family: Verdana;
    text-decoration: none;
    cursor: pointer;    
    height: 2.04vh;
    line-height: 2.04vh;
    font-size: @LargeTextSizeStyle;
    font-weight: normal;
    position: relative;    
    display: inline-block;
    left: 114%;
    top: -4;
    margin-top: .4vh;
</Styled>
<Styled @bind-Classname="SelectClasses">
    width: 20%;
    height: 6vh;
    position: fixed;
    top: 14.8vh;
    left: @LeftStyle;
</Styled>
<Styled @bind-Classname="StatusStyle">  
    text-align: center;
    position: absolute;
    top: 18vh;
    left: -4%;
    width: 60%;
    height: 2.8vh;
    line-height: 2.8vh;
    font-size: @LargeTextSizeStyle;
    color: @LabelColor;
</Styled>
<Styled @bind-Classname="Instructions">
    font-size: @SmallTextSizeStyle;    
    line-height: @LargeTextSizeStyle;
    color: white;
    position: fixed;
    top: 48vh;
    left: 26%;
    display: @InstructionsDisplay;
</Styled>
<Styled @bind-Classname="Smallheader">
    font-weight: bold;
    font-size: @TextSizeStyle;
    margin-bottom: -.02vh;
</Styled>

<div class="sidebar">
    <div class="sidebarelement">
       <div class="@SideBarElementText">
            Downloads
        </div>
        <div class="displayinline">
            <div class="smallicon">
                <a class="@DownloadLink" download="MemberData.xlsx" href="@SampleMemberDataPath" target="_blank">MemberData.xlsx</a>
            </div>
            <div class="@SideBarSmallText">
                This workbook contains 20,000 sample records on both sheets:<br />
                Member<br />
                Address
            </div>
        </div>        
    </div>    
    <div class="bottomsidebar">
        
    </div>
</div>
<div class="logo"></div>
<div class="topbar">
    <div class="logotext">
    </div>
    <div class="@Slogan">
        An online demo of Nuget package DataJuggler.Excelerate
    </div>
</div>
<div class="topright">
    <ComboBox OnChange="SelectionChanged" Parent="this" Name="TextSizeComboBox"
          Height="6" Width="100" LabelSize="30" LabelText="Text Size:" TextSize="TextSizeEnum.Large">
    </ComboBox>
</div>
<div class="contentmain">
    <div class="row displayinline contentmaintoprow">
        <FileUpload CustomSuccessMessage="Your file uploaded successfully." 
            OnReset="OnReset" ResetButtonClassName="localbutton" ShowStatus="false"
            PartialGuidLength="12" MaxFileSize=@UploadLimit FilterByExtension="true" 
            ShowCustomButton="true"  ButtonText="Upload Excel" OnChange="OnFileUploaded"
            CustomButtonClassName="orangeButton" AllowedExtensions=".xlsx"
            ShowResetButton="false" AppendPartialGuid="true"
            CustomExtensionMessage="Only .xlsx extensions are allowed." 
            InputFileClassName="customfileupload" Visible=false Status="Refresh"
            FileTooLargeMessage=@FileTooLargeMessage>
        </FileUpload>       
    </div>
    <div class="@SelectClasses">
        <ComboBox OnChange="SheetSelected" Parent="this" Name="SheetNamesComboBox"
                LabelColor="White" Position="relative" Visible="true" 
                Left="0" Top="4" Width="120"  LabelSize="30"
                LabelText="Sheets:" TextSize="TextSizeEnum.Large">
        </ComboBox>
    </div>
    <div>
        <div class="row .zindex5">
            <ImageButton ButtonNumber="2" ButtonText="Generate Class" Name="GenerateClassesButton"
                TextSize="TextSizeEnum.Large" Left="28" Top="4.8" Height="4" 
                Width="120" ImageUrl="@ButtonUrl" Parent="this"></ImageButton>
            <ValidationComponent Name="NamespaceComponent" Parent="this" Caption="Namespace"
                LabelColor="White" IsRequired="true" ValidationMessage="You must enter a namespace"
                Top="10"></ValidationComponent>
        </div>
    </div>
    <div class="@StatusStyle">
        <label class="text-center">@Status</label>
    </div>
    @if ((HasResponse) && (Response.Success) && (Response.HasFileName) && (Response.HasFullPath))
     {
         <div class="smallicon2 text-white text-nowrap">
            <a class="@DownloadLink2" download="@Response.FileName" href="@DownloadPath" target="_blank">@Response.FileName</a><br />
             <span class="small text-white">
                 * Browsers do not allow downloading files with .cs extensions, so download this zip file and extract to a folder.
             </span>
        </div>
    }
    <div class="@Instructions">
        <ImageButton ButtonNumber="3" ButtonText="Hide Instructions" Name="HideInstructionsButton"
                TextSize="TextSizeEnum.Large" Left="-30" Top="4.4" Height="4"
                Width="120" ImageUrl="../Images/OrangeButton.png" Parent="this"></ImageButton>
        <div class="marginsmall @Smallheader">Instructions</div>
        1. Prepare your spreadsheet and ensure your worksheet has a header row, 
        and the column names make good property names. <br />
        Download the Members.xlsx sample to see a good example.<br />
        2. Upload your spreadsheet and select the sheet to code generate a class for.<br />
        3. Type in a namespace for your project and click the 'Generate Class' button.<br />
        4. Download the zip file and extract the contents to get your .cs file.<br />
        <div class="marginsmall @Smallheader">Tips / Troubleshooting</div>
        It helps to have some rows of data to attempt to determine the data type. Getting the data type is kind of a hack,<br />
        as I could not find away with EPP Plus to get the actual column data types<br />

        If you have a problem generating classes, create an issue here or if you want the source code or to star<br />
        https://github.com/DataJuggler/Excelerate <br />
        
        If you have a problem with this site, create an issue here or if want the source code or to star<br />
        https://github.com/DataJuggler/Blazor.Excelerate <br />

        <div class="marginsmall @Smallheader">Data Privacy</div>
        No one has access to my server except me and my dog.<br />
        I am building a Windows Service that deletes files older than one hour.<br />
        This will be deployed in the next few days (estimate 10/18/2021).
    </div>
</div>

    


